fragment LedgerFields on Ledger {
  id
  amount
  transactionType
  transactionDate
  transactionBy
  remarks
  referenceId
  createdBy
  updatedBy
  createdAt
  updatedAt
}

query AllLedger {
  AllLedger(orderBy: [{ transactionDate: desc }]) {
    ...LedgerFields
  }
}

query AllLedgerByType($type: LedgerType!) {
  AllLedger(
    where: { transactionType: { equals: $type } }
    orderBy: [{ createdAt: desc }, { transactionDate: desc }]
  ) {
    ...LedgerFields
  }
}

query Ledger($id: ID!) {
  Ledger(id: $id) {
    ...LedgerFields
  }
}

mutation CreateLedger(
  $amount: Float
  $transactionType: LedgerType!
  $transactionDate: DateTime!
  $transactionBy: String
  $remarks: String
  $referenceId: String
) {
  CreateLedger(
    data: {
      amount: $amount
      transactionType: $transactionType
      transactionDate: $transactionDate
      transactionBy: $transactionBy
      remarks: $remarks
      referenceId: $referenceId
    }
  ) {
    ...LedgerFields
  }
}

mutation UpdateLedger(
  $id: ID!
  $amount: Float
  $transactionType: LedgerType
  $transactionDate: DateTime
  $transactionBy: String
  $remarks: String
  $referenceId: String
) {
  UpdateLedger(
    id: $id
    data: {
      amount: $amount
      transactionType: $transactionType
      transactionDate: $transactionDate
      transactionBy: $transactionBy
      remarks: $remarks
      referenceId: $referenceId
    }
  ) {
    ...LedgerFields
  }
}

mutation DeleteLedger($id: ID!) {
  DeleteLedger(id: $id)
}

query AllMonthlyLedger {
  MonthlyLedgerSummary {
    year
    months {
      month
      data {
        startDate
        endDate
        previousEndDate
        initialBalance
        credits
        balanceaftecredits
        debits
        finalBalance
      }
    }
  }
}
