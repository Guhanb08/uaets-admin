fragment QuestionFields on Question {
  id
  examId
  question
  description
  thumbnail
  answerExplanation
  videoUrl
  gallery
  options
  type
  position
  status
  createdBy
  updatedBy
  createdAt
  updatedAt
}

query AllQuestion {
  AllQuestion {
    ...QuestionFields
  }
}

query AllQuestionByExamId($examId: String!) {
  AllQuestion(where: { examId: { equals: $examId } } ,  orderBy: [ {
     createdAt: asc
  }]) {
    ...QuestionFields
  }
}

query Question($id: ID!) {
  Question(id: $id) {
    ...QuestionFields
   
  }
}
mutation CreateQuestion(
  $question: String!
  $description: String
  $thumbnail: String
  $videoUrl: String
  $gallery: JSON
  $answerExplanation: String
  $type: QuestionType
  $position: Int
  $status: Status
  $examId: String!
  $options: JSON
) {
  CreateQuestion(
    data: {
      question: $question
      description: $description
      thumbnail: $thumbnail
      videoUrl: $videoUrl
      answerExplanation: $answerExplanation
      gallery: $gallery
      type: $type
      position: $position
      status: $status
      exam: { connect: { id: $examId } }
      options: $options
    }
  ) {
    ...QuestionFields
  }
}
mutation UpdateQuestion(
  $id: ID!
  $question: String
  $description: String
  $thumbnail: String
  $answerExplanation: String
  $videoUrl: String
  $gallery: JSON
  $options  : JSON
  $type: QuestionType
  $position: Int
  $status: Status
) {
  UpdateQuestion(
    id: $id
    data: {
      question: $question
      description: $description
      answerExplanation: $answerExplanation
      thumbnail: $thumbnail
      videoUrl: $videoUrl
      options: $options
      gallery: $gallery
      type: $type
      position: $position
      status: $status
    }
  ) {
    ...QuestionFields
  }
}



mutation UpdateQuestionStatus($id: ID!, $status: Status!) {
  UpdateQuestion(id: $id, data: { status: $status }) {
    id
    status
  }
}

mutation DeleteQuestion($id: ID!) {
  DeleteQuestion(id: $id)
}

mutation RepositionQuestion($fromIndex: Int!, $toIndex: Int!) {
  RepositionQuestion(data: { fromIndex: $fromIndex, toIndex: $toIndex })
}

mutation CreateDummyQuestions($count: Int!, $examId: String!) {
  CreateDummyQuestions(data: { count: $count, examId: $examId }) {
    ...QuestionFields
  }
}
